# Start from go base image
FROM golang:alpine AS builder

# Add maintainer info
LABEL maintainer="Isuru Siriwardana <isurusiri@protonmail.com>"

# Install git for fetching dependencies.
RUN apk update && apk add --no-cache git

# Set the current working directory inside the container for shared module
WORKDIR /go/src/github.com/isurusiri/services/shared

# Copy the share module
ADD ./shared .

# Set the current working directory inside the container for foo module
WORKDIR /go/src/github.com/isurusiri/services/foo

# Copy the foo module
ADD ./foo .

# Build the app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o foo .

# Start a new stage from the scratch
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the pre-built binary from the previous stage
COPY --from=builder /go/src/github.com/isurusiri/services/foo .
# COPY --from=builder /app/.env .

# Expose the port 8090 to the outside
EXPOSE 8090

# Execute the binary
CMD ["./foo"]
